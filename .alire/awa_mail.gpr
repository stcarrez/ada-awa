with "awa";
with "aws";

library project Awa_Mail is

   Version      := Awa.Version;
   Name         := "awa_mail";

   type AWS_Impl_Type is ("none", "1", "2", "3", "4");

   AWS_Impl    : AWS_Impl_Type := external ("AWA_AWS_IMPL", "4");

   for Source_Dirs use ("../awa/plugins/awa-mail/src");

   case AWS_Impl is
       when "none" =>
	  for Source_Dirs use Project'Source_Dirs & ("../awa/plugins/awa-mail/src/no-aws");

       when others =>
	  for Source_Dirs use Project'Source_Dirs & ("../awa/plugins/awa-mail/src/aws");
   end case;
				
   package Naming is
      case AWS_Impl is
         when "none" =>
	    null;

         when "1" =>
            for Implementation ("AWA.Mail.Clients.AWS_SMTP.Initialize")
               use "awa-mail-clients-aws_smtp-initialize_nossl.adb";

         when "2" | "3" =>
            for Implementation ("AWA.Mail.Clients.AWS_SMTP.Initialize")
               use "awa-mail-clients-aws_smtp-initialize_ssl.adb";

         when "4" =>
            for Implementation ("AWA.Mail.Clients.AWS_SMTP.Initialize")
               use "awa-mail-clients-aws_smtp-initialize_ssl_24.adb";

      end case;
   end Naming;

   for Library_Name use Name;
   for Library_Kind use Awa.Library_Type;
   for Library_Version use "lib" & Project'Library_Name & ".so." & Version;

   for Library_Dir use "../lib/" & Name & "/" & Project'Library_Kind;
   for Object_Dir use "../obj/" & Name & "/" & Project'Library_Kind;

   package Binder renames AWA.Binder;
   package Builder renames AWA.Builder;
   package Compiler renames AWA.Compiler;

end Awa_Mail;
